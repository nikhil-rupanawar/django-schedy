# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import clocknode_pb2 as clocknode__pb2


class SchedulerStub(object):
    """Missing associated documentation comment in .proto file"""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.AddSchedule = channel.unary_unary(
                '/messaging.rpc.providers.grpc.clocknode.Scheduler/AddSchedule',
                request_serializer=clocknode__pb2.AddScheduleRequest.SerializeToString,
                response_deserializer=clocknode__pb2.AddScheduleResponse.FromString,
                )
        self.RemoveSchedule = channel.unary_unary(
                '/messaging.rpc.providers.grpc.clocknode.Scheduler/RemoveSchedule',
                request_serializer=clocknode__pb2.RemoveScheduleRequest.SerializeToString,
                response_deserializer=clocknode__pb2.RemoveScheduleResponse.FromString,
                )
        self.ReplaceSchedules = channel.unary_unary(
                '/messaging.rpc.providers.grpc.clocknode.Scheduler/ReplaceSchedules',
                request_serializer=clocknode__pb2.ReplaceSchedulesRequest.SerializeToString,
                response_deserializer=clocknode__pb2.ReplaceSchedulesResponse.FromString,
                )
        self.HealthPing = channel.unary_unary(
                '/messaging.rpc.providers.grpc.clocknode.Scheduler/HealthPing',
                request_serializer=clocknode__pb2.HealthPingRequest.SerializeToString,
                response_deserializer=clocknode__pb2.HealthPingResponse.FromString,
                )


class SchedulerServicer(object):
    """Missing associated documentation comment in .proto file"""

    def AddSchedule(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveSchedule(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReplaceSchedules(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def HealthPing(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SchedulerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'AddSchedule': grpc.unary_unary_rpc_method_handler(
                    servicer.AddSchedule,
                    request_deserializer=clocknode__pb2.AddScheduleRequest.FromString,
                    response_serializer=clocknode__pb2.AddScheduleResponse.SerializeToString,
            ),
            'RemoveSchedule': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveSchedule,
                    request_deserializer=clocknode__pb2.RemoveScheduleRequest.FromString,
                    response_serializer=clocknode__pb2.RemoveScheduleResponse.SerializeToString,
            ),
            'ReplaceSchedules': grpc.unary_unary_rpc_method_handler(
                    servicer.ReplaceSchedules,
                    request_deserializer=clocknode__pb2.ReplaceSchedulesRequest.FromString,
                    response_serializer=clocknode__pb2.ReplaceSchedulesResponse.SerializeToString,
            ),
            'HealthPing': grpc.unary_unary_rpc_method_handler(
                    servicer.HealthPing,
                    request_deserializer=clocknode__pb2.HealthPingRequest.FromString,
                    response_serializer=clocknode__pb2.HealthPingResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'messaging.rpc.providers.grpc.clocknode.Scheduler', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Scheduler(object):
    """Missing associated documentation comment in .proto file"""

    @staticmethod
    def AddSchedule(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/messaging.rpc.providers.grpc.clocknode.Scheduler/AddSchedule',
            clocknode__pb2.AddScheduleRequest.SerializeToString,
            clocknode__pb2.AddScheduleResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RemoveSchedule(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/messaging.rpc.providers.grpc.clocknode.Scheduler/RemoveSchedule',
            clocknode__pb2.RemoveScheduleRequest.SerializeToString,
            clocknode__pb2.RemoveScheduleResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReplaceSchedules(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/messaging.rpc.providers.grpc.clocknode.Scheduler/ReplaceSchedules',
            clocknode__pb2.ReplaceSchedulesRequest.SerializeToString,
            clocknode__pb2.ReplaceSchedulesResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def HealthPing(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/messaging.rpc.providers.grpc.clocknode.Scheduler/HealthPing',
            clocknode__pb2.HealthPingRequest.SerializeToString,
            clocknode__pb2.HealthPingResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
