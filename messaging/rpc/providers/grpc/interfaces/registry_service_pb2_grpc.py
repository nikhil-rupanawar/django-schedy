# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import messaging.rpc.providers.grpc.interfaces.messages_pb2 as messages__pb2


class RegistryServiceStub(object):
    """Missing associated documentation comment in .proto file"""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.register_clock_node = channel.unary_unary(
                '/messaging.rpc.providers.grpc.proto.registry_service.RegistryService/register_clock_node',
                request_serializer=messages__pb2.RegisterClockNodeRequest.SerializeToString,
                response_deserializer=messages__pb2.RegisterClockNodeResponse.FromString,
                )


class RegistryServiceServicer(object):
    """Missing associated documentation comment in .proto file"""

    def register_clock_node(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RegistryServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'register_clock_node': grpc.unary_unary_rpc_method_handler(
                    servicer.register_clock_node,
                    request_deserializer=messages__pb2.RegisterClockNodeRequest.FromString,
                    response_serializer=messages__pb2.RegisterClockNodeResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'messaging.rpc.providers.grpc.proto.registry_service.RegistryService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class RegistryService(object):
    """Missing associated documentation comment in .proto file"""

    @staticmethod
    def register_clock_node(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/messaging.rpc.providers.grpc.proto.registry_service.RegistryService/register_clock_node',
            messages__pb2.RegisterClockNodeRequest.SerializeToString,
            messages__pb2.RegisterClockNodeResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
